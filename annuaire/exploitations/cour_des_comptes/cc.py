#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Jun 23 10:50:38 2017

@author: sgmap
"""

import dedupe
import fuzzywuzzy

import pandas as pd
cc = pd.read_excel('2016_05_27-28_-_Liste_des_organismes.xls')
cc.rename(columns={"Nom de l'entité": 'Nom'}, inplace=True)

# charge un fichier (le plus ancien de l'annuaire)

from annuaire.load import load_num_csv

ann = load_num_csv(0)
ann.rename(columns={'http://www.w3.org/2000/01/rdf-schema#label': 'Nom'}, inplace=True)


import difflib 
import jellyfish

def get_closest_match(x, list_strings):
  best_match = None
  highest_jw = 0

  for current_string in list_strings:
    current_score = jellyfish.jaro_winkler(x, current_string)
    if(current_score > highest_jw):
      highest_jw = current_score
      best_match = current_string
  return best_match

cc_nom = cc["Nom"].str.lower().str.replace('é', 'e')
ann_nom = ann["Nom"].str.lower().str.replace('é', 'e')

test = ann_nom.map(lambda x: difflib.get_close_matches(x, cc_nom)[0])
test2 = ann_nom.map(lambda x: get_closest_match(x, cc_nom))

cc['trouvé'] = cc_nom.isin(ann_nom)
cc['trouvé'].value_counts()

EPA = cc_nom[(~cc['trouvé']) & (cc['Nature juridique'] == 'EPA')]
len(EPA)

ann_nom[ann_nom.str.contains('coop')]


fields = [{'field' : 'Nom', 'type': 'String'},]

cc1 = [{x[0]: x[1]} for x in cc.head().to_dict('index').items()]
ann1 = [{x[0]: x[1]} for x in ann.head().to_dict('index').items()]

linker = dedupe.RecordLink(fields)

linker.sample(cc.to_dict('index'), 100)

data_d = dict()
for idx, row in cc.head().iterrows():
    clean_row = [(k, v) for (k, v) in row.items()]
    row_id = int(idx)
    data_d[row_id] = dict(clean_row)


data_d[row_id] = dict(clean_row)
